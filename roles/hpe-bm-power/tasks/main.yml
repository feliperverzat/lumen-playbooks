---
- name: Check Health status via API
  block:
    - name: Get general status body
      uri:
        url: https://{{ ilo_ip }}/redfish/v1/Systems/1
        method: GET
        headers:
          Content-Type: application/json
        validate_certs: no
        user: "{{ ilo_user }}"
        password: "{{ ilo_password }}"
        force_basic_auth: yes
      register: status_body

    - name: Retrieve health status
      set_fact:
        health_status: "{{ status_body.json | json_query('Status.Health') }}"

    - name: Fail if status is different from OK
      fail:
        msg: "[FAILURE] Server is unhealthy."
      when: health_status != "OK"
  rescue:
    - name: Printing status body
      debug:
        var: health_status

    - name: Server is unhealthy
      fail:
        msg: "[ERROR] [E0001] Server is unhealthy. Please check if the server is correctly powered and configured to accept further actions."
      when: health_status != "OK"
  delegate_to: 127.0.0.1

- name: Check if system PowerState is On
  block:
    - name: Get general status body
      uri:
        url: https://{{ ilo_ip }}/redfish/v1/Systems/1
        method: GET
        headers:
          Content-Type: application/json
        validate_certs: no
        user: "{{ ilo_user }}"
        password: "{{ ilo_password }}"
        force_basic_auth: yes
      register: status_body

    - name: Retrieve power state status
      set_fact:
        power_status: "{{ status_body.json | json_query('PowerState') }}"

    - name: Fail if status is different from On
      fail:
        msg: "[WARNING] Server is powered off."
      when: power_status != "On"
  rescue:
    - name: Printing status body
      debug:
        var: power_status

    - name: Server is powered off
      fail:
        msg: "[WARN] [W0001] Server is powered off. Please power on before starting any configuration."
      when: power_status != "On"
  delegate_to: 127.0.0.1
  when: mode == "ison"

- name: Power on system using API
  block:
     - name: Power on system
       redfish_command:
         category: Systems
         command: PowerOn
         baseuri: "{{ ilo_ip }}"
         username: "{{ ilo_user }}"
         password: "{{ ilo_password }}"
       delegate_to: 127.0.0.1
       register: poweron_status
  rescue:
    - name: Printing status body
      debug:
        var: poweron_status

    - name: Power on failure
      fail:
        msg: "[ERROR] [E0007] Ansible was not able to power on the system through the API. Please check if the server is in a compatible state to accept power commands."
      when: health_status == "OK"
  delegate_to: 127.0.0.1
  when: mode == "poweron"

- name: Power graceful shutdown system using API
  block:
     - name: Graceful shutdown system
       redfish_command:
         category: Systems
         command: PowerGracefulShutdown
         baseuri: "{{ ilo_ip }}"
         username: "{{ ilo_user }}"
         password: "{{ ilo_password }}"
       delegate_to: 127.0.0.1
       register: powergraceful_status
  rescue:
    - name: Printing status body
      debug:
        var: powergraceful_status

    - name: Power graceful shutdown failure
      fail:
        msg: "[ERROR] [E0006] Ansible was not able to perform a graceful shutdown in the system through the API. Please check if the server is in a compatible state to accept power commands."
      when: health_status == "OK"
  delegate_to: 127.0.0.1
  when: mode == "gracefulshutdown"

- name: Power off system using API
  block:
     - name: Power off system
       redfish_command:
         category: Systems
         command: PowerForceOff
         baseuri: "{{ ilo_ip }}"
         username: "{{ ilo_user }}"
         password: "{{ ilo_password }}"
       delegate_to: 127.0.0.1
       register: poweroff_status
  rescue:
    - name: Printing status body
      debug:
        var: poweroff_status

    - name: Power Off failure
      fail:
        msg: "[ERROR] [E0005] Ansible was not able to power-off the system through the API. Please check if the server is in a compatible state to accept power off commands."
      when: health_status == "OK"
  delegate_to: 127.0.0.1
  when: mode == "poweroff"

- name: Reboot system using API
  block:
     - name: Reboot system
       redfish_command:
         category: Systems
         command: PowerReboot
         baseuri: "{{ ilo_ip }}"
         username: "{{ ilo_user }}"
         password: "{{ ilo_password }}"
       delegate_to: 127.0.0.1
       register: reboot_status
  rescue:
    - name: Printing status body
      debug:
        var: reboot_status

    - name: Reboot failure
      fail:
        msg: "[ERROR] [E0002] Ansible was not able to reboot the system through the API. Please check if the server is in a compatible state to accept reboot commands."
      when: health_status == "OK"
  delegate_to: 127.0.0.1
  when: mode == "reboot"

